on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - edited

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - run: |
          pip install poetry
          poetry install

      - run: poetry run flake8 .

      - id: action_black
        run: |
          black_output="$(poetry run black . 2>&1)"
          regex='\s?[0-9]+\sfiles?\sreformatted(\.|,)\s?'
          if [[ "${black_output}" =~ $regex ]]; then
            echo "::set-output name=is_formatted::true"
          else
            echo "::set-output name=is_formatted::false"
          fi
          echo "${black_output}"

      - if: steps.action_black.outputs.is_formatted == 'true'
        run: |
          echo "Black formatting failed, please run the latest version of black"
          exit 1
      
      - run: |
          poetry run pytest --cov=flask_extend_headers tests > pytest-coverage.txt
          poetry run coverage report --fail-under=95

      - uses: coroo/pytest-coverage-commentator@v1.0.2
        with:
          pytest-coverage: pytest-coverage.txt

      - uses: amannn/action-semantic-pull-request@v3.4.2
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

  Build:
    needs: CI

    runs-on: ubuntu-latest

    environment: Test
  
    steps:
      - uses: actions/checkout@v2

      - run: |
          pip install poetry
          poetry version 0.0.1
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi ${{ secrets.PYPI_TOKEN }}
          poetry build
          poetry publish --repository test-pypi --username __token__ --dry-run
